apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment  # Unique name for the deployment
  namespace: vote      # Namespace where the deployment resides
  labels:
    app: demo-voting-app  # Label for filtering and grouping
spec:
  replicas: 1           # Number of pod replicas in the deployment
  selector:
    matchLabels:
      name: postgres-pod  # Selects pods with this label
      app: demo-voting-app  # Additional label for filtering
  template:
    metadata:
      name: postgres-pod  # Name for pod templates
      labels:
        name: postgres-pod  # Label for pods created by this deployment
        app: demo-voting-app  # Additional label for filtering
    spec:
      containers:
      - name: postgres
        image: postgres:9.4
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-data
        emptyDir: {}  # EmptyDir volume for persistent data (consider persistence for important data)
      env:
      # Consider using Kubernetes Secrets to manage credentials securely
      - name: POSTGRES_USER
        #value: "postgres"  # Replace with reference to Secret if used
      - name: POSTGRES_PASSWORD
        #value: "postgres"  # Replace with reference to Secret if used
# Review POSTGRESS_HOST_METHOD for security implications in production
